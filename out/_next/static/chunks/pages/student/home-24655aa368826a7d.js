(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[313],{2538:(e,t,n)=>{"use strict";n.d(t,{j:()=>d});var r=n(6083),o=n(6362),a=n(9999),s=n(4232);let d=()=>{let{user:e,userType:t,studentProfile:n}=(0,a.ur)(),d="student"===t&&e&&n?n.userId:"",l=(0,s.useCallback)(async e=>{if(!e)return console.log("No studentId provided to fetchStudent"),null;try{let t=(0,r.H9)(o.db,"students",e),n=await (0,r.x7)(t);if(!n.exists())return null;return{...n.data(),studentId:n.id}}catch(e){return console.error("Error fetching student:",e),null}},[]),u=(0,s.useCallback)(async e=>{if(!e)return console.log("No studentId provided to fetchStudentBookings"),[];try{let t=(0,r.P)((0,r.rJ)(o.db,"bookings"),(0,r._M)("studentId","==",e),(0,r.My)("date.year","desc"),(0,r.My)("date.month","desc"),(0,r.My)("date.day","desc"));return(await (0,r.GG)(t)).docs.map(e=>({...e.data(),bookingId:e.id}))}catch(e){return console.error("Error fetching bookings:",e),[]}},[]),i=(0,s.useCallback)(async e=>{if(!e)return console.log("No studentId provided to fetchStudentLessons"),[];try{let t=await u(e);if(!t.length)return[];let n=t.map(e=>e.bookingId),a=[];for(let e=0;e<n.length;e+=10){let t=n.slice(e,e+10),s=(0,r.P)((0,r.rJ)(o.db,"lessons"),(0,r._M)("bookingId","in",t));(await (0,r.GG)(s)).forEach(e=>a.push({...e.data(),lessonId:e.id}))}return a.sort((e,t)=>{let n=new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute);return new Date(t.date.year,t.date.month-1,t.date.day,t.date.hour,t.date.minute).getTime()-n.getTime()})}catch(e){return console.error("Error fetching lessons:",e),[]}},[u]),c=(0,s.useCallback)(async e=>{if(!e)return console.log("No studentId provided to calculateStudentStats"),{totalLessons:0,completedAssignments:0,currentSubjects:0,averageGrade:0,upcomingLessons:0};try{let[t,n,r]=await Promise.all([l(e),i(e),u(e)]);if(!t)return console.log("Student not found for stats calculation"),{totalLessons:0,completedAssignments:0,currentSubjects:0,averageGrade:0,upcomingLessons:0};let o=n.filter(e=>"completed"===e.lessonStatus),a=r.filter(e=>new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute)>new Date&&e.confirmed),s=t.subjects.reduce((e,t)=>e+t.currentMark,0),d=t.subjects.length>0?Math.round(s/t.subjects.length):0;return{totalLessons:o.length,completedAssignments:o.length,currentSubjects:t.subjects.length,averageGrade:d,upcomingLessons:a.length}}catch(e){return console.error("Error calculating student stats:",e),{totalLessons:0,completedAssignments:0,currentSubjects:0,averageGrade:0,upcomingLessons:0}}},[l,i,u]),m=(0,s.useCallback)(async e=>{if(!e)return console.log("No studentId provided to calculateWeeklyStats"),{weeklyLessons:0,weeklyHours:0,weeklyProgress:0,completedThisWeek:0};try{let[t,n]=await Promise.all([i(e),u(e)]),r=new Date,o=new Date(r);o.setDate(r.getDate()-r.getDay()),o.setHours(0,0,0,0);let a=new Date(o);a.setDate(o.getDate()+6),a.setHours(23,59,59,999);let s=t.filter(e=>{let t=new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute);return t>=o&&t<=a}),d=n.filter(e=>{let t=new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute);return t>=o&&t<=a}),l=s.filter(e=>"completed"===e.lessonStatus).length,c=d.reduce((e,t)=>e+(t.durationMinutes||60)/60,0),m=d.length,g=m>0?Math.round(l/m*100):0;return{weeklyLessons:d.length,weeklyHours:c,weeklyProgress:g,completedThisWeek:l}}catch(e){return console.error("Error calculating weekly stats:",e),{weeklyLessons:0,weeklyHours:0,weeklyProgress:0,completedThisWeek:0}}},[i,u]),g=(0,s.useCallback)(async e=>{if(!e)return console.log("No studentId provided to getSubjectPerformance"),[];try{let[t,n,a]=await Promise.all([l(e),i(e),u(e)]);if(!t||!t.subjects||!Array.isArray(t.subjects))return console.log("No student or subjects found"),[];return(await Promise.all(t.subjects.map(async e=>{let t,s,d=0,l=100;if("string"==typeof e)t=e;else{if("object"!=typeof e||null===e)return console.warn("Unexpected subject format:",e),null;if(t=e.subjectName||"Unknown Subject","currentMark"in e){let t=e.currentMark;d="number"==typeof t?t:"string"==typeof t&&parseFloat(t)||0}if("targetMark"in e){let t=e.targetMark;l="number"==typeof t?t:"string"==typeof t&&parseFloat(t)||100}s=e.tutorId||void 0}let u=n.filter(e=>{var n;let r=a.find(t=>t.bookingId===e.bookingId);return(null==r||null==(n=r.subject)?void 0:n.toLowerCase())===t.toLowerCase()&&"completed"===e.lessonStatus}),i=new Date,c=a.filter(e=>{var n;return new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour||0,e.date.minute||0)>i&&(null==(n=e.subject)?void 0:n.toLowerCase())===t.toLowerCase()&&e.confirmed}).sort((e,t)=>{let n=new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour||0,e.date.minute||0),r=new Date(t.date.year,t.date.month-1,t.date.day,t.date.hour||0,t.date.minute||0);return n.getTime()-r.getTime()}),m=c[0]?new Date(c[0].date.year,c[0].date.month-1,c[0].date.day,c[0].date.hour||0,c[0].date.minute||0):void 0,g="No Tutor Assigned";if(s&&"string"==typeof s&&""!==s.trim())try{if(/^[a-zA-Z0-9_-]+$/.test(s.trim())){let e=await (0,r.x7)((0,r.H9)(o.db,"tutors",s.trim()));if(e.exists()){let t=e.data();g=(null==t?void 0:t.username)||(null==t?void 0:t.displayName)||(null==t?void 0:t.name)||"Unknown Tutor"}else{let e=await (0,r.x7)((0,r.H9)(o.db,"users",s.trim()));if(e.exists()){let t=e.data();g=(null==t?void 0:t.displayName)||(null==t?void 0:t.username)||"Unknown Tutor"}else console.log("Tutor not found for ID: ".concat(s)),g="Tutor Not Found"}}else console.warn("Invalid tutor ID format: ".concat(s)),g="Invalid Tutor ID"}catch(e){console.error("Error fetching tutor data for ID ".concat(s,":"),e),g="permission-denied"===e.code?"Access Denied":"Error Loading Tutor"}let h=l>0?Math.min(Math.round(d/l*100),100):0;return{subjectName:t,currentMark:d,targetMark:l,progress:h,tutorName:g,lessonsCompleted:u.length,nextLessonDate:m}}))).filter(e=>null!==e)}catch(e){return console.error("Error fetching subject performance:",e),[]}},[l,i,u]),h=(0,s.useCallback)(async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;if(!e)return console.log("No studentId provided to getRecentActivity"),[];try{let[n,r]=await Promise.all([i(e),u(e)]),o=[];return n.filter(e=>"completed"===e.lessonStatus).slice(0,5).forEach(e=>{let t=r.find(t=>t.bookingId===e.bookingId);o.push({id:e.lessonId,type:"lesson_completed",title:"Lesson Completed",description:"Completed ".concat((null==t?void 0:t.subject)||"Unknown"," lesson"),date:new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute),subjectName:null==t?void 0:t.subject})}),r.filter(e=>new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute)>new Date&&e.confirmed).slice(0,3).forEach(e=>{o.push({id:e.bookingId,type:"lesson_scheduled",title:"Lesson Scheduled",description:"Upcoming ".concat(e.subject," lesson"),date:new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute),subjectName:e.subject})}),o.sort((e,t)=>t.date.getTime()-e.date.getTime()).slice(0,t)}catch(e){return console.error("Error fetching recent activity:",e),[]}},[i,u]),y=(0,s.useCallback)(async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5;if(!e)return console.log("No studentId provided to getUpcomingLessons"),[];try{let n=(await u(e)).filter(e=>new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute)>new Date&&e.confirmed).slice(0,t);return await Promise.all(n.map(async e=>{let t="Unknown Tutor";try{let n=await (0,r.x7)((0,r.H9)(o.db,"tutors",e.tutorId));n.exists()&&(t=n.data().username||"Unknown Tutor")}catch(e){console.error("Error fetching tutor data:",e)}return{...e,tutorName:t}}))}catch(e){return console.error("Error fetching upcoming lessons:",e),[]}},[u]);return{studentId:d,fetchStudent:l,fetchStudentBookings:u,fetchStudentLessons:i,calculateStudentStats:c,calculateWeeklyStats:m,getSubjectPerformance:g,getRecentActivity:h,getUpcomingLessons:y}}},8337:(e,t,n)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/student/home",function(){return n(4152)}])}},e=>{var t=t=>e(e.s=t);e.O(0,[531,716,197,152,636,593,792],()=>t(8337)),_N_E=e.O()}]);