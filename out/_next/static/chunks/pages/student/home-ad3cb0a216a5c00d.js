(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[313],{2538:(e,t,o)=>{"use strict";o.d(t,{j:()=>d});var r=o(6083),n=o(6362),a=o(9999),s=o(4232);let d=()=>{let{user:e,userType:t,studentProfile:o}=(0,a.ur)(),d="student"===t&&e&&o?o.uid:"",l=(0,s.useCallback)(async e=>{if(!e)return console.log("No studentId provided to fetchStudent"),null;try{let t=(0,r.H9)(n.db,"students",e),o=await (0,r.x7)(t);if(!o.exists())return null;return{...o.data(),uid:o.id}}catch(e){return console.error("Error fetching student:",e),null}},[]),u=(0,s.useCallback)(async e=>{if(!e)return console.log("No studentId provided to fetchStudentBookings"),[];try{let t=(0,r.P)((0,r.rJ)(n.db,"bookings"),(0,r._M)("studentId","==",e),(0,r.My)("date.year","desc"),(0,r.My)("date.month","desc"),(0,r.My)("date.day","desc"));return(await (0,r.GG)(t)).docs.map(e=>({...e.data(),bookingId:e.id}))}catch(e){return console.error("Error fetching bookings:",e),[]}},[]),i=(0,s.useCallback)(async e=>{if(!e)return console.log("No studentId provided to fetchStudentLessons"),[];try{let t=await u(e);if(!t.length)return[];let o=t.map(e=>e.bookingId),a=[];for(let e=0;e<o.length;e+=10){let t=o.slice(e,e+10),s=(0,r.P)((0,r.rJ)(n.db,"lessons"),(0,r._M)("bookingId","in",t));(await (0,r.GG)(s)).forEach(e=>a.push({...e.data(),lessonId:e.id}))}return a.sort((e,t)=>{let o=new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute);return new Date(t.date.year,t.date.month-1,t.date.day,t.date.hour,t.date.minute).getTime()-o.getTime()})}catch(e){return console.error("Error fetching lessons:",e),[]}},[u]),c=(0,s.useCallback)(async e=>{if(!e)return console.log("No studentId provided to calculateStudentStats"),{totalLessons:0,completedAssignments:0,currentSubjects:0,averageGrade:0,upcomingLessons:0};try{let[t,o,r]=await Promise.all([l(e),i(e),u(e)]);if(!t)return console.log("Student not found for stats calculation"),{totalLessons:0,completedAssignments:0,currentSubjects:0,averageGrade:0,upcomingLessons:0};let n=o.filter(e=>"completed"===e.lessonStatus),a=r.filter(e=>new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute)>new Date&&e.confirmed),s=t.subjects.reduce((e,t)=>"object"==typeof t&&"currentMark"in t?e+t.currentMark:e,0),d=t.subjects.length>0?Math.round(s/t.subjects.length):0;return{totalLessons:n.length,completedAssignments:n.length,currentSubjects:t.subjects.length,averageGrade:d,upcomingLessons:a.length}}catch(e){return console.error("Error calculating student stats:",e),{totalLessons:0,completedAssignments:0,currentSubjects:0,averageGrade:0,upcomingLessons:0}}},[l,i,u]),m=(0,s.useCallback)(async e=>{if(!e)return console.log("No studentId provided to calculateWeeklyStats"),{weeklyLessons:0,weeklyHours:0,weeklyProgress:0,completedThisWeek:0};try{let[t,o]=await Promise.all([i(e),u(e)]),r=new Date,n=new Date(r);n.setDate(r.getDate()-r.getDay()),n.setHours(0,0,0,0);let a=new Date(n);a.setDate(n.getDate()+6),a.setHours(23,59,59,999);let s=t.filter(e=>{let t=new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute);return t>=n&&t<=a}),d=o.filter(e=>{let t=new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute);return t>=n&&t<=a}),l=s.filter(e=>"completed"===e.lessonStatus).length,c=d.reduce((e,t)=>e+(t.durationMinutes||60)/60,0),m=d.length,h=m>0?Math.round(l/m*100):0;return{weeklyLessons:d.length,weeklyHours:c,weeklyProgress:h,completedThisWeek:l}}catch(e){return console.error("Error calculating weekly stats:",e),{weeklyLessons:0,weeklyHours:0,weeklyProgress:0,completedThisWeek:0}}},[i,u]),h=(0,s.useCallback)(async e=>{if(!e)return console.log("No studentId provided to getSubjectPerformance"),[];try{let[t,o,a]=await Promise.all([l(e),i(e),u(e)]);if(!t||!t.subjects||!Array.isArray(t.subjects))return console.log("No student or subjects found"),[];return await Promise.all(t.subjects.map(async e=>{let t=e.subjectName,s=e.currentMark||0,d=e.targetMark||100,l=e.tutorId||void 0,u=o.filter(e=>{var o;let r=a.find(t=>t.bookingId===e.bookingId);return(null==r||null==(o=r.subject)?void 0:o.toLowerCase())===t.toLowerCase()&&"completed"===e.lessonStatus}),i=new Date,c=a.filter(e=>{var o;return new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour||0,e.date.minute||0)>i&&(null==(o=e.subject)?void 0:o.toLowerCase())===t.toLowerCase()&&e.confirmed}).sort((e,t)=>{let o=new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour||0,e.date.minute||0),r=new Date(t.date.year,t.date.month-1,t.date.day,t.date.hour||0,t.date.minute||0);return o.getTime()-r.getTime()}),m=c[0]?new Date(c[0].date.year,c[0].date.month-1,c[0].date.day,c[0].date.hour||0,c[0].date.minute||0):void 0,h="No Tutor Assigned";if(l&&"string"==typeof l&&""!==l.trim())try{if(/^[a-zA-Z0-9_-]+$/.test(l.trim())){let e=await (0,r.x7)((0,r.H9)(n.db,"tutors",l.trim()));if(e.exists()){let t=e.data();h=(null==t?void 0:t.displayName)||(null==t?void 0:t.username)||"Unknown Tutor"}else{let e=await (0,r.x7)((0,r.H9)(n.db,"users",l.trim()));if(e.exists()){let t=e.data();h=(null==t?void 0:t.displayName)||"Unknown Tutor"}else console.log("Tutor not found for ID: ".concat(l)),h="Tutor Not Found"}}else console.warn("Invalid tutor ID format: ".concat(l)),h="Invalid Tutor ID"}catch(e){console.error("Error fetching tutor data for ID ".concat(l,":"),e),h="permission-denied"===e.code?"Access Denied":"Error Loading Tutor"}let g=d>0?Math.min(Math.round(s/d*100),100):0;return{subjectName:t,currentMark:s,targetMark:d,progress:g,tutorName:h,lessonsCompleted:u.length,nextLessonDate:m}}))}catch(e){return console.error("Error fetching subject performance:",e),[]}},[l,i,u]),g=(0,s.useCallback)(async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;if(!e)return console.log("No studentId provided to getRecentActivity"),[];try{let[o,r]=await Promise.all([i(e),u(e)]),n=[];return o.filter(e=>"completed"===e.lessonStatus).slice(0,5).forEach(e=>{let t=r.find(t=>t.bookingId===e.bookingId);n.push({id:e.lessonId,type:"lesson_completed",title:"Lesson Completed",description:"Completed ".concat((null==t?void 0:t.subject)||"Unknown"," lesson"),date:new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute),subjectName:null==t?void 0:t.subject})}),r.filter(e=>new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute)>new Date&&e.confirmed).slice(0,3).forEach(e=>{n.push({id:e.bookingId,type:"lesson_scheduled",title:"Lesson Scheduled",description:"Upcoming ".concat(e.subject," lesson"),date:new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute),subjectName:e.subject})}),n.sort((e,t)=>t.date.getTime()-e.date.getTime()).slice(0,t)}catch(e){return console.error("Error fetching recent activity:",e),[]}},[i,u]),y=(0,s.useCallback)(async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5;if(!e)return console.log("No studentId provided to getUpcomingLessons"),[];try{let o=(await u(e)).filter(e=>new Date(e.date.year,e.date.month-1,e.date.day,e.date.hour,e.date.minute)>new Date&&e.confirmed).slice(0,t);return await Promise.all(o.map(async e=>{let t="Unknown Tutor";try{let o=await (0,r.x7)((0,r.H9)(n.db,"tutors",e.tutorId));if(o.exists()){let e=o.data();t=e.displayName||e.username||"Unknown Tutor"}}catch(e){console.error("Error fetching tutor data:",e)}return{...e,tutorName:t}}))}catch(e){return console.error("Error fetching upcoming lessons:",e),[]}},[u]);return{studentId:d,fetchStudent:l,fetchStudentBookings:u,fetchStudentLessons:i,calculateStudentStats:c,calculateWeeklyStats:m,getSubjectPerformance:h,getRecentActivity:g,getUpcomingLessons:y}}},8337:(e,t,o)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/student/home",function(){return o(4152)}])}},e=>{var t=t=>e(e.s=t);e.O(0,[531,716,197,152,636,593,792],()=>t(8337)),_N_E=e.O()}]);